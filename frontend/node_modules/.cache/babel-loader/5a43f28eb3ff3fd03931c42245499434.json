{"ast":null,"code":"var _jsxFileName = \"/Users/rphl/Projects/XWordsApp/crosswords/frontend/src/components/gridViewer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport useGlobalState from '../utils/useGlobalState';\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst pkg = require('../../package.json');\n\nfunction GridEditor(props) {\n  _s();\n\n  const globalState = useGlobalState();\n  const [dimensions, setDimensions] = useState([10, 10]);\n  const [dimensionsFrozen, setDimensionsFrozen] = useState(false);\n  const [solutions, setSolutions] = useState([]);\n  const [selectedBlock, setSelectedBlock] = useState(null);\n  const [title, setTitle] = useState('');\n  const [def, setDef] = useState([[], []]);\n  const {\n    username,\n    api_token\n  } = globalState.user;\n  const {\n    uid: gridId\n  } = useParams();\n\n  const loadGrid = async id => {\n    try {\n      const r = await fetch(process.env.REACT_APP_API_URL + '/grid/' + id);\n      const d = await r.json();\n      setDimensions([d.width, d.height]);\n      setTitle(d.title);\n      const a = [];\n\n      for (let j = 0; j < d.height; j++) {\n        a.push([]);\n\n        for (let i = 0; i < d.width; i++) {\n          const ch = d.grid[j * d.width + i];\n          a[j].push(ch === '_' ? '' : ch.toUpperCase());\n        }\n      }\n\n      setSolutions(a);\n      setDef(d.definitions);\n      setDimensionsFrozen(true);\n    } catch (e) {\n      window.location = '/404';\n    }\n  };\n\n  useEffect(() => {\n    if (gridId) {\n      (async () => await loadGrid(gridId))();\n    }\n  }, [gridId]);\n\n  const setSolutionXY = (i, j, e) => {\n    e.preventDefault();\n    if (solutions[i][j] === ' ') return;\n    const char = e.key.toLowerCase();\n\n    if (char.length === 1 && /[a-z -]/.test(char)) {\n      const newSol = solutions;\n      newSol[i][j] = char.toUpperCase();\n      setSolutions(newSol);\n      setSelectedBlock(null);\n      document.activeElement.blur();\n    }\n\n    if (char === 'backspace') {\n      const newSol = solutions;\n      newSol[i][j] = '';\n      setSolutions(newSol);\n      setSelectedBlock(null);\n      document.activeElement.blur();\n    }\n  };\n\n  const romanize = num => {\n    if (isNaN(num)) return NaN;\n    var digits = String(+num).split(\"\"),\n        key = [\"\", \"C\", \"CC\", \"CCC\", \"CD\", \"D\", \"DC\", \"DCC\", \"DCCC\", \"CM\", \"\", \"X\", \"XX\", \"XXX\", \"XL\", \"L\", \"LX\", \"LXX\", \"LXXX\", \"XC\", \"\", \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\"],\n        roman = \"\",\n        i = 3;\n\n    while (i--) roman = (key[+digits.pop() + i * 10] || \"\") + roman;\n\n    return Array(+digits.join(\"\") + 1).join(\"M\") + roman;\n  };\n\n  const isGridFull = () => {\n    return solutions.map(l => l.map(c => c).join('')).join('').length === dimensions[0] * dimensions[1];\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container main-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), solutions.length && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this), solutions[0].map((val, j) => /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              textAlign: 'center'\n            },\n            children: [romanize(j + 1), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 60\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this), solutions.map((line, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [i + 1, \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), line.map((val, j) => /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              width: '2em',\n              height: '2em',\n              border: '1px solid #000'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              style: {\n                outline: 'none',\n                textAlign: 'center',\n                border: '0',\n                caretColor: 'transparent',\n                width: '2em',\n                backgroundColor: selectedBlock && selectedBlock[0] === i && selectedBlock[1] === j ? 'red' : val === ' ' ? 'black' : 'white'\n              },\n              readOnly: true,\n              value: solutions[i][j] ? val : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 129\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 61\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cliquer sur une case et taper la lettre d\\xE9sir\\xE9, Retour arri\\xE8re pour re-initialiser la case.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"D\\xE9finitions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Horizontalement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: def[0].map((l, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: '5px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              width: '3em',\n              display: 'inline-block'\n            },\n            children: [i + 1, \". \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 50\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: l\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 118\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Verticalement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: def[1].map((l, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: '5px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              width: '3em',\n              display: 'inline-block'\n            },\n            children: [romanize(i + 1), \". \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 50\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: l\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 128\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: print,\n        children: \"Imprimer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GridEditor, \"gxzopgqDKHLAZCVnOyJLfzvDY+0=\", false, function () {\n  return [useGlobalState, useParams];\n});\n\n_c = GridEditor;\nexport default GridEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"GridEditor\");","map":{"version":3,"sources":["/Users/rphl/Projects/XWordsApp/crosswords/frontend/src/components/gridViewer.js"],"names":["React","useEffect","useState","useGlobalState","useParams","pkg","require","GridEditor","props","globalState","dimensions","setDimensions","dimensionsFrozen","setDimensionsFrozen","solutions","setSolutions","selectedBlock","setSelectedBlock","title","setTitle","def","setDef","username","api_token","user","uid","gridId","loadGrid","id","r","fetch","process","env","REACT_APP_API_URL","d","json","width","height","a","j","push","i","ch","grid","toUpperCase","definitions","e","window","location","setSolutionXY","preventDefault","char","key","toLowerCase","length","test","newSol","document","activeElement","blur","romanize","num","isNaN","NaN","digits","String","split","roman","pop","Array","join","isGridFull","map","l","c","val","textAlign","line","border","outline","caretColor","backgroundColor","margin","display","print"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport useGlobalState from '../utils/useGlobalState'\nimport { useParams } from \"react-router-dom\";\nconst pkg = require('../../package.json')\n\nfunction GridEditor(props) {\n    const globalState = useGlobalState()\n    const [dimensions, setDimensions] = useState([10, 10])\n    const [dimensionsFrozen, setDimensionsFrozen] = useState(false)\n    const [solutions, setSolutions] = useState([])\n    const [selectedBlock, setSelectedBlock] = useState(null)\n    const [title, setTitle] = useState('')\n    const [def, setDef] = useState([[], []])\n    const { username, api_token } = globalState.user\n    const {uid: gridId} = useParams();\n\n\n    const loadGrid = async (id) => {\n        try {\n            const r = await fetch(process.env.REACT_APP_API_URL+'/grid/'+id)\n            const d = await r.json()\n            setDimensions([d.width, d.height])\n            setTitle(d.title)\n            const a = []\n            for (let j=0; j< d.height; j++){\n                a.push([])\n                for (let i=0; i< d.width; i++){\n                    const ch = d.grid[j*d.width+i]\n                    a[j].push(ch === '_' ? '': ch.toUpperCase())\n                }\n            }\n            setSolutions(a)\n            setDef(d.definitions)\n            setDimensionsFrozen(true)\n        } catch(e) {\n            window.location = '/404'\n        }\n    }\n\n    useEffect(()=>{\n        if (gridId) {\n            (async () => (await loadGrid(gridId)))()\n        }\n            \n    }, [gridId])\n\n\n    const setSolutionXY = (i, j, e) => {\n        e.preventDefault()\n        if(solutions[i][j] === ' ') return\n        const char = e.key.toLowerCase()\n        if (char.length === 1 && /[a-z -]/.test(char)){\n            const newSol = solutions;\n            newSol[i][j] = char.toUpperCase()\n            setSolutions(newSol)\n            setSelectedBlock(null);\n            document.activeElement.blur();\n        }\n        if(char === 'backspace'){\n            const newSol = solutions;\n            newSol[i][j] = ''\n            setSolutions(newSol)\n            setSelectedBlock(null);\n            document.activeElement.blur();\n        }\n    }\n\n    const romanize = (num) => {\n        if (isNaN(num))\n            return NaN;\n        var digits = String(+num).split(\"\"),\n            key = [\"\",\"C\",\"CC\",\"CCC\",\"CD\",\"D\",\"DC\",\"DCC\",\"DCCC\",\"CM\",\n                   \"\",\"X\",\"XX\",\"XXX\",\"XL\",\"L\",\"LX\",\"LXX\",\"LXXX\",\"XC\",\n                   \"\",\"I\",\"II\",\"III\",\"IV\",\"V\",\"VI\",\"VII\",\"VIII\",\"IX\"],\n            roman = \"\",\n            i = 3;\n        while (i--)\n            roman = (key[+digits.pop() + (i * 10)] || \"\") + roman;\n        return Array(+digits.join(\"\") + 1).join(\"M\") + roman;\n    }\n\n    const isGridFull = () => {\n        return solutions.map(l=>l.map(c=> c).join('')).join('').length === dimensions[0]*dimensions[1]\n    }\n    return (\n        <div className=\"container main-container\">\n            <h1>{title}</h1>\n            { solutions.length && (<><table>\n                <tr><td> </td>{solutions[0].map((val, j)=>(<td style={{textAlign: 'center'}}>{romanize(j+1)}.</td>))}</tr>\n                { solutions.map((line, i)=>(\n                    <tr><td>{i+1}.</td>{line.map((val, j)=>(<td style={{width: '2em', height: '2em', border: '1px solid #000'}}><input type='text' style={{outline: 'none', textAlign: 'center', border: '0', caretColor: 'transparent', width: '2em', backgroundColor: ((selectedBlock && (selectedBlock[0] === i && selectedBlock[1] === j)) ? 'red' : (val === ' ' ? 'black' : 'white'))}} readOnly value={solutions[i][j] ? val : ''}/></td>))}</tr>\n                ))\n                }\n                </table>\n                <p>Cliquer sur une case et taper la lettre désiré, Retour arrière pour re-initialiser la case.</p>\n                <h3>Définitions</h3>\n                <h4>Horizontalement</h4>\n                <div>\n                {def[0].map((l, i) => (\n                    <div style={{margin: '5px'}}><span style={{width: '3em', display: 'inline-block'}}>{i+1}. </span><span>{l}</span></div>\n                ))}\n                </div>\n                <h4>Verticalement</h4>\n                <div>\n                {def[1].map((l, i) => (\n                    <div style={{margin: '5px'}}><span style={{width: '3em', display: 'inline-block'}}>{romanize(i+1)}. </span><span>{l}</span></div>\n                ))}\n                </div>\n                <button onClick={print}>Imprimer</button>\n                </>)\n            }\n        </div>\n    )\n}\n\nexport default GridEditor"]},"metadata":{},"sourceType":"module"}