{"ast":null,"code":"var _jsxFileName = \"/Users/rphl/Projects/XWordsApp/crosswords/frontend/src/components/ownGrids.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport useGlobalState from '../utils/useGlobalState';\nimport { useParams } from \"react-router-dom\";\nimport { useReactToPrint } from 'react-to-print';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst pkg = require('../../package.json');\n\nfunction OwnGrids() {\n  _s();\n\n  const globalState = useGlobalState();\n  const [solutions, setSolutions] = useState([]);\n  const [title, setTitle] = useState('');\n  const [def, setDef] = useState([[], []]);\n  const {\n    username,\n    api_token\n  } = globalState.user;\n  const {\n    uid: gridId\n  } = useParams();\n  const componentRef = React.useRef();\n  const print = useReactToPrint({\n    content: () => componentRef.current\n  });\n\n  const loadGrid = async id => {\n    try {\n      const r = await fetch(process.env.REACT_APP_API_URL + '/grid/' + id);\n      const d = await r.json();\n      setTitle(d.title);\n      const a = [];\n\n      for (let j = 0; j < d.height; j++) {\n        a.push([]);\n\n        for (let i = 0; i < d.width; i++) {\n          const ch = d.grid[j * d.width + i];\n          a[j].push(ch === '_' ? '' : ch.toUpperCase());\n        }\n      }\n\n      setSolutions(a);\n      setDef(d.definitions);\n    } catch (e) {\n      window.location = '/';\n    }\n  };\n\n  useEffect(() => {\n    if (gridId) {\n      (async () => await loadGrid(gridId))();\n    }\n  }, [gridId]);\n\n  const romanize = num => {\n    if (isNaN(num)) return NaN;\n    var digits = String(+num).split(\"\"),\n        key = [\"\", \"C\", \"CC\", \"CCC\", \"CD\", \"D\", \"DC\", \"DCC\", \"DCCC\", \"CM\", \"\", \"X\", \"XX\", \"XXX\", \"XL\", \"L\", \"LX\", \"LXX\", \"LXXX\", \"XC\", \"\", \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\"],\n        roman = \"\",\n        i = 3;\n\n    while (i--) roman = (key[+digits.pop() + i * 10] || \"\") + roman;\n\n    return Array(+digits.join(\"\") + 1).join(\"M\") + roman;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container main-container\",\n    children: [solutions.length && /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: componentRef,\n      style: {\n        margin: '15px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 84\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this), solutions[0].map((val, j) => /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              textAlign: 'center'\n            },\n            children: [romanize(j + 1), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 60\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), solutions.map((line, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [i + 1, \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), line.map((val, j) => /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              width: '2em',\n              height: '2em',\n              border: '1px solid #000',\n              backgroundColor: val === ' ' ? 'black' : 'white'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                textAlign: 'center'\n              },\n              children: solutions[i][j] ? val : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 181\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 61\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 100\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cliquer sur une case et taper la lettre d\\xE9sir\\xE9, Retour arri\\xE8re pour re-initialiser la case.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"D\\xE9finitions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Horizontalement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: def[0].map((l, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: '5px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              width: '3em',\n              display: 'inline-block'\n            },\n            children: [i + 1, \". \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 50\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: l\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 118\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Verticalement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: def[1].map((l, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: '5px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              width: '3em',\n              display: 'inline-block'\n            },\n            children: [romanize(i + 1), \". \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 50\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: l\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 128\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 36\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"btn btn-primary\",\n      onClick: print,\n      children: \"Imprimer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s(OwnGrids, \"QiExSy0zmrUh1fr7Z55sxSnPdQ4=\", false, function () {\n  return [useGlobalState, useParams, useReactToPrint];\n});\n\n_c = OwnGrids;\nexport default OwnGrids;\n\nvar _c;\n\n$RefreshReg$(_c, \"OwnGrids\");","map":{"version":3,"sources":["/Users/rphl/Projects/XWordsApp/crosswords/frontend/src/components/ownGrids.js"],"names":["React","useEffect","useState","useGlobalState","useParams","useReactToPrint","pkg","require","OwnGrids","globalState","solutions","setSolutions","title","setTitle","def","setDef","username","api_token","user","uid","gridId","componentRef","useRef","print","content","current","loadGrid","id","r","fetch","process","env","REACT_APP_API_URL","d","json","a","j","height","push","i","width","ch","grid","toUpperCase","definitions","e","window","location","romanize","num","isNaN","NaN","digits","String","split","key","roman","pop","Array","join","length","margin","map","val","textAlign","line","border","backgroundColor","l","display"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport useGlobalState from '../utils/useGlobalState'\nimport { useParams } from \"react-router-dom\";\nimport { useReactToPrint } from 'react-to-print';\nconst pkg = require('../../package.json')\n\n\nfunction OwnGrids() {\n    const globalState = useGlobalState()\n    const [solutions, setSolutions] = useState([])\n    const [title, setTitle] = useState('')\n    const [def, setDef] = useState([[], []])\n    const { username, api_token } = globalState.user\n    const {uid: gridId} = useParams();\n    const componentRef = React.useRef();\n    const print = useReactToPrint({\n      content: () => componentRef.current,\n    });\n\n    const loadGrid = async (id) => {\n        try {\n            const r = await fetch(process.env.REACT_APP_API_URL+'/grid/'+id)\n            const d = await r.json()\n            setTitle(d.title)\n            const a = []\n            for (let j=0; j< d.height; j++){\n                a.push([])\n                for (let i=0; i< d.width; i++){\n                    const ch = d.grid[j*d.width+i]\n                    a[j].push(ch === '_' ? '': ch.toUpperCase())\n                }\n            }\n            setSolutions(a)\n            setDef(d.definitions)\n        } catch(e) {\n            window.location = '/'\n        }\n    }\n\n    useEffect(()=>{\n        if (gridId) {\n            (async () => (await loadGrid(gridId)))()\n        }\n            \n    }, [gridId])\n\n\n    const romanize = (num) => {\n        if (isNaN(num))\n            return NaN;\n        var digits = String(+num).split(\"\"),\n            key = [\"\",\"C\",\"CC\",\"CCC\",\"CD\",\"D\",\"DC\",\"DCC\",\"DCCC\",\"CM\",\n                   \"\",\"X\",\"XX\",\"XXX\",\"XL\",\"L\",\"LX\",\"LXX\",\"LXXX\",\"XC\",\n                   \"\",\"I\",\"II\",\"III\",\"IV\",\"V\",\"VI\",\"VII\",\"VIII\",\"IX\"],\n            roman = \"\",\n            i = 3;\n        while (i--)\n            roman = (key[+digits.pop() + (i * 10)] || \"\") + roman;\n        return Array(+digits.join(\"\") + 1).join(\"M\") + roman;\n    }\n\n    return (\n        <div className=\"container main-container\">\n            { solutions.length && (<div ref={componentRef} style={{margin:'15px'}}><h1>{title}</h1><table>\n                <tr><td> </td>{solutions[0].map((val, j)=>(<td style={{textAlign: 'center'}}>{romanize(j+1)}.</td>))}</tr>\n                { solutions.map((line, i)=>(\n                    <tr><td>{i+1}.</td>{line.map((val, j)=>(<td style={{width: '2em', height: '2em', border: '1px solid #000', backgroundColor: (val === ' ' ? 'black' : 'white')}}><span style={{textAlign: 'center'}}>{solutions[i][j] ? val : ''}</span></td>))}</tr>\n                ))\n                }\n                </table>\n                <p>Cliquer sur une case et taper la lettre désiré, Retour arrière pour re-initialiser la case.</p>\n                <h3>Définitions</h3>\n                <h4>Horizontalement</h4>\n                <div>\n                {def[0].map((l, i) => (\n                    <div style={{margin: '5px'}}><span style={{width: '3em', display: 'inline-block'}}>{i+1}. </span><span>{l}</span></div>\n                ))}\n                </div>\n                <h4>Verticalement</h4>\n                <div>\n                {def[1].map((l, i) => (\n                    <div style={{margin: '5px'}}><span style={{width: '3em', display: 'inline-block'}}>{romanize(i+1)}. </span><span>{l}</span></div>\n                ))}\n                </div>\n                </div>)\n            }\n            <button class=\"btn btn-primary\" onClick={print}>Imprimer</button>\n        </div>\n    )\n}\n\nexport default OwnGrids"]},"metadata":{},"sourceType":"module"}