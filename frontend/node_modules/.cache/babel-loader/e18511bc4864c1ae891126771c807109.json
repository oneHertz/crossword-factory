{"ast":null,"code":"var _jsxFileName = \"/Users/rphl/Projects/XWordsApp/crosswords/frontend/src/components/gridViewer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport useGlobalState from '../utils/useGlobalState';\nimport { useParams } from \"react-router-dom\";\nimport { useReactToPrint } from 'react-to-print';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst pkg = require('../../package.json');\n\nfunction GridEditor(props) {\n  _s();\n\n  const globalState = useGlobalState();\n  const [dimensions, setDimensions] = useState([10, 10]);\n  const [dimensionsFrozen, setDimensionsFrozen] = useState(false);\n  const [solutions, setSolutions] = useState([]);\n  const [selectedBlock, setSelectedBlock] = useState(null);\n  const [title, setTitle] = useState('');\n  const [def, setDef] = useState([[], []]);\n  const {\n    username,\n    api_token\n  } = globalState.user;\n  const {\n    uid: gridId\n  } = useParams();\n  const componentRef = React.useRef();\n  const print = useReactToPrint({\n    content: () => componentRef.current\n  });\n\n  const loadGrid = async id => {\n    try {\n      const r = await fetch(process.env.REACT_APP_API_URL + '/grid/' + id);\n      const d = await r.json();\n      setDimensions([d.width, d.height]);\n      setTitle(d.title);\n      const a = [];\n\n      for (let j = 0; j < d.height; j++) {\n        a.push([]);\n\n        for (let i = 0; i < d.width; i++) {\n          const ch = d.grid[j * d.width + i];\n          a[j].push(ch === '_' ? '' : ch.toUpperCase());\n        }\n      }\n\n      setSolutions(a);\n      setDef(d.definitions);\n      setDimensionsFrozen(true);\n    } catch (e) {\n      window.location = '/404';\n    }\n  };\n\n  useEffect(() => {\n    if (gridId) {\n      (async () => await loadGrid(gridId))();\n    }\n  }, [gridId]);\n\n  const romanize = num => {\n    if (isNaN(num)) return NaN;\n    var digits = String(+num).split(\"\"),\n        key = [\"\", \"C\", \"CC\", \"CCC\", \"CD\", \"D\", \"DC\", \"DCC\", \"DCCC\", \"CM\", \"\", \"X\", \"XX\", \"XXX\", \"XL\", \"L\", \"LX\", \"LXX\", \"LXXX\", \"XC\", \"\", \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\"],\n        roman = \"\",\n        i = 3;\n\n    while (i--) roman = (key[+digits.pop() + i * 10] || \"\") + roman;\n\n    return Array(+digits.join(\"\") + 1).join(\"M\") + roman;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container main-container\",\n    children: [solutions.length && /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: componentRef,\n      style: {},\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 71\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this), solutions[0].map((val, j) => /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              textAlign: 'center'\n            },\n            children: [romanize(j + 1), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 60\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), solutions.map((line, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [i + 1, \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), line.map((val, j) => /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              width: '2em',\n              height: '2em',\n              border: '1px solid #000'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              style: {\n                outline: 'none',\n                textAlign: 'center',\n                border: '0',\n                caretColor: 'transparent',\n                width: '2em',\n                backgroundColor: selectedBlock && selectedBlock[0] === i && selectedBlock[1] === j ? 'red' : val === ' ' ? 'black' : 'white'\n              },\n              readOnly: true,\n              value: solutions[i][j] ? val : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 129\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 61\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 87\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cliquer sur une case et taper la lettre d\\xE9sir\\xE9, Retour arri\\xE8re pour re-initialiser la case.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"D\\xE9finitions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Horizontalement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: def[0].map((l, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: '5px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              width: '3em',\n              display: 'inline-block'\n            },\n            children: [i + 1, \". \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 50\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: l\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 118\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Verticalement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: def[1].map((l, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: '5px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              width: '3em',\n              display: 'inline-block'\n            },\n            children: [romanize(i + 1), \". \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 50\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: l\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 128\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 36\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"btn btn-primary\",\n      onClick: print,\n      children: \"Imprimer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GridEditor, \"MirqnmHp3uStPrN1SFdwb0QgQP0=\", false, function () {\n  return [useGlobalState, useParams, useReactToPrint];\n});\n\n_c = GridEditor;\nexport default GridEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"GridEditor\");","map":{"version":3,"sources":["/Users/rphl/Projects/XWordsApp/crosswords/frontend/src/components/gridViewer.js"],"names":["React","useEffect","useState","useGlobalState","useParams","useReactToPrint","pkg","require","GridEditor","props","globalState","dimensions","setDimensions","dimensionsFrozen","setDimensionsFrozen","solutions","setSolutions","selectedBlock","setSelectedBlock","title","setTitle","def","setDef","username","api_token","user","uid","gridId","componentRef","useRef","print","content","current","loadGrid","id","r","fetch","process","env","REACT_APP_API_URL","d","json","width","height","a","j","push","i","ch","grid","toUpperCase","definitions","e","window","location","romanize","num","isNaN","NaN","digits","String","split","key","roman","pop","Array","join","length","map","val","textAlign","line","border","outline","caretColor","backgroundColor","l","margin","display"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport useGlobalState from '../utils/useGlobalState'\nimport { useParams } from \"react-router-dom\";\nimport { useReactToPrint } from 'react-to-print';\nconst pkg = require('../../package.json')\n\n\n\nfunction GridEditor(props) {\n    const globalState = useGlobalState()\n    const [dimensions, setDimensions] = useState([10, 10])\n    const [dimensionsFrozen, setDimensionsFrozen] = useState(false)\n    const [solutions, setSolutions] = useState([])\n    const [selectedBlock, setSelectedBlock] = useState(null)\n    const [title, setTitle] = useState('')\n    const [def, setDef] = useState([[], []])\n    const { username, api_token } = globalState.user\n    const {uid: gridId} = useParams();\n    const componentRef = React.useRef();\n    const print = useReactToPrint({\n      content: () => componentRef.current,\n    });\n\n    const loadGrid = async (id) => {\n        try {\n            const r = await fetch(process.env.REACT_APP_API_URL+'/grid/'+id)\n            const d = await r.json()\n            setDimensions([d.width, d.height])\n            setTitle(d.title)\n            const a = []\n            for (let j=0; j< d.height; j++){\n                a.push([])\n                for (let i=0; i< d.width; i++){\n                    const ch = d.grid[j*d.width+i]\n                    a[j].push(ch === '_' ? '': ch.toUpperCase())\n                }\n            }\n            setSolutions(a)\n            setDef(d.definitions)\n            setDimensionsFrozen(true)\n        } catch(e) {\n            window.location = '/404'\n        }\n    }\n\n    useEffect(()=>{\n        if (gridId) {\n            (async () => (await loadGrid(gridId)))()\n        }\n            \n    }, [gridId])\n\n\n    const romanize = (num) => {\n        if (isNaN(num))\n            return NaN;\n        var digits = String(+num).split(\"\"),\n            key = [\"\",\"C\",\"CC\",\"CCC\",\"CD\",\"D\",\"DC\",\"DCC\",\"DCCC\",\"CM\",\n                   \"\",\"X\",\"XX\",\"XXX\",\"XL\",\"L\",\"LX\",\"LXX\",\"LXXX\",\"XC\",\n                   \"\",\"I\",\"II\",\"III\",\"IV\",\"V\",\"VI\",\"VII\",\"VIII\",\"IX\"],\n            roman = \"\",\n            i = 3;\n        while (i--)\n            roman = (key[+digits.pop() + (i * 10)] || \"\") + roman;\n        return Array(+digits.join(\"\") + 1).join(\"M\") + roman;\n    }\n\n    return (\n        <div className=\"container main-container\">\n            { solutions.length && (<div ref={componentRef} style={{}}><h1>{title}</h1><table>\n                <tr><td> </td>{solutions[0].map((val, j)=>(<td style={{textAlign: 'center'}}>{romanize(j+1)}.</td>))}</tr>\n                { solutions.map((line, i)=>(\n                    <tr><td>{i+1}.</td>{line.map((val, j)=>(<td style={{width: '2em', height: '2em', border: '1px solid #000'}}><input type='text' style={{outline: 'none', textAlign: 'center', border: '0', caretColor: 'transparent', width: '2em', backgroundColor: ((selectedBlock && (selectedBlock[0] === i && selectedBlock[1] === j)) ? 'red' : (val === ' ' ? 'black' : 'white'))}} readOnly value={solutions[i][j] ? val : ''}/></td>))}</tr>\n                ))\n                }\n                </table>\n                <p>Cliquer sur une case et taper la lettre désiré, Retour arrière pour re-initialiser la case.</p>\n                <h3>Définitions</h3>\n                <h4>Horizontalement</h4>\n                <div>\n                {def[0].map((l, i) => (\n                    <div style={{margin: '5px'}}><span style={{width: '3em', display: 'inline-block'}}>{i+1}. </span><span>{l}</span></div>\n                ))}\n                </div>\n                <h4>Verticalement</h4>\n                <div>\n                {def[1].map((l, i) => (\n                    <div style={{margin: '5px'}}><span style={{width: '3em', display: 'inline-block'}}>{romanize(i+1)}. </span><span>{l}</span></div>\n                ))}\n                </div>\n                </div>)\n            }\n            <button class=\"btn btn-primary\" onClick={print}>Imprimer</button>\n        </div>\n    )\n}\n\nexport default GridEditor"]},"metadata":{},"sourceType":"module"}