{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport JSZip from 'jszip';\nimport { pdfjs as pdfjsLib } from \"react-pdf\";\nimport pdfjsWorker from 'pdfjs-dist/build/pdf.worker.entry';\nimport Swal from 'sweetalert2';\nimport useGlobalState from '../utils/useGlobalState';\nimport GPXDropzone from './GPXDrop';\nimport ImageDropzone from './ImgDrop';\nimport RouteDrawing from './RouteDrawing';\nimport PathDrawing from './PathDrawing';\nimport StravaPicker from './StravaPicker';\nimport CornerCoordsInput from './CornerCoordsInput';\nimport { parseGpx, extractCornersCoordsFromFilename, validateCornersCoords } from '../utils/fileHelpers';\nimport { LatLon } from '../utils/Utils';\nimport { parseTCXString } from '../utils/tcxParser';\npdfjsLib.GlobalWorkerOptions.workerSrc = pdfjsWorker;\n\nconst pkg = require('../../package.json');\n\nfunction NewMap() {\n  _s();\n\n  const globalState = useGlobalState();\n}\n\n_s(NewMap, \"3ZaeCfZAHXFD1ZMeNLcC1TELaKU=\", false, function () {\n  return [useGlobalState];\n});\n\n_c = NewMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewMap\");","map":{"version":3,"sources":["/Users/rphl/Projects/XWordsApp/crosswords/frontend/src/components/new.js"],"names":["React","useEffect","JSZip","pdfjs","pdfjsLib","pdfjsWorker","Swal","useGlobalState","GPXDropzone","ImageDropzone","RouteDrawing","PathDrawing","StravaPicker","CornerCoordsInput","parseGpx","extractCornersCoordsFromFilename","validateCornersCoords","LatLon","parseTCXString","GlobalWorkerOptions","workerSrc","pkg","require","NewMap","globalState"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAK,IAAIC,QAAlB,QAAkC,WAAlC;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,WAAP,MAAwB,WAAxB;AACA,OAAOC,aAAP,MAA0B,WAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,SAASC,QAAT,EAAmBC,gCAAnB,EAAqDC,qBAArD,QAAkF,sBAAlF;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,cAAT,QAA+B,oBAA/B;AAEAd,QAAQ,CAACe,mBAAT,CAA6BC,SAA7B,GAAyCf,WAAzC;;AAEA,MAAMgB,GAAG,GAAGC,OAAO,CAAC,oBAAD,CAAnB;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AACd,QAAMC,WAAW,GAAGjB,cAAc,EAAlC;AACH;;GAFQgB,M;UACehB,c;;;KADfgB,M","sourcesContent":["import React, { useEffect } from 'react'\nimport JSZip from 'jszip'\nimport { pdfjs as pdfjsLib } from \"react-pdf\";\nimport pdfjsWorker from 'pdfjs-dist/build/pdf.worker.entry';\nimport Swal from 'sweetalert2'\nimport useGlobalState from '../utils/useGlobalState'\nimport GPXDropzone from './GPXDrop'\nimport ImageDropzone from './ImgDrop'\nimport RouteDrawing from './RouteDrawing'\nimport PathDrawing from './PathDrawing'\nimport StravaPicker from './StravaPicker'\nimport CornerCoordsInput from './CornerCoordsInput'\nimport { parseGpx, extractCornersCoordsFromFilename, validateCornersCoords } from '../utils/fileHelpers'\nimport { LatLon } from '../utils/Utils'\nimport { parseTCXString } from '../utils/tcxParser'\n\npdfjsLib.GlobalWorkerOptions.workerSrc = pdfjsWorker;\n\nconst pkg = require('../../package.json')\n\nfunction NewMap() {\n    const globalState = useGlobalState()\n}"]},"metadata":{},"sourceType":"module"}