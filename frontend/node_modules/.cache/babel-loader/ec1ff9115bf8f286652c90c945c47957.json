{"ast":null,"code":"var _jsxFileName = \"/Users/rphl/Projects/XWordsApp/crosswords/frontend/src/components/ownGrids.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport useGlobalState from '../utils/useGlobalState';\nimport { useParams } from \"react-router-dom\";\nimport { useReactToPrint } from 'react-to-print';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst pkg = require('../../package.json');\n\nfunction OwnGrids() {\n  _s();\n\n  const globalState = useGlobalState();\n  const [list, setList] = useState('');\n  const {\n    username,\n    api_token\n  } = globalState.user;\n\n  const loadGrids = async () => {\n    try {\n      const r = await fetch(process.env.REACT_APP_API_URL + '/username/' + username, {\n        method: 'GET',\n        credentials: 'omit',\n        headers: {\n          'Authorization': 'Token ' + api_token,\n          'Content-Type': 'application/json'\n        }\n      });\n      const list = await r.json();\n      setList(list);\n    } catch (e) {\n      window.location = '/';\n    }\n  };\n\n  useEffect(() => {\n    (async () => await loadGrids())();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container main-container\",\n    children: [solutions.length && /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: componentRef,\n      style: {\n        margin: '15px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 84\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this), solutions[0].map((val, j) => /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              textAlign: 'center'\n            },\n            children: [romanize(j + 1), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 60\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), solutions.map((line, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [i + 1, \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), line.map((val, j) => /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              width: '2em',\n              height: '2em',\n              border: '1px solid #000',\n              backgroundColor: val === ' ' ? 'black' : 'white'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                textAlign: 'center'\n              },\n              children: solutions[i][j] ? val : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 181\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 61\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 100\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cliquer sur une case et taper la lettre d\\xE9sir\\xE9, Retour arri\\xE8re pour re-initialiser la case.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"D\\xE9finitions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Horizontalement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: def[0].map((l, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: '5px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              width: '3em',\n              display: 'inline-block'\n            },\n            children: [i + 1, \". \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 50\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: l\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 118\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Verticalement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: def[1].map((l, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: '5px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              width: '3em',\n              display: 'inline-block'\n            },\n            children: [romanize(i + 1), \". \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 50\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: l\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 128\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 36\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"btn btn-primary\",\n      onClick: print,\n      children: \"Imprimer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(OwnGrids, \"wiSgCcQ0ExL87yPug1NN5q8A4ZA=\", false, function () {\n  return [useGlobalState];\n});\n\n_c = OwnGrids;\nexport default OwnGrids;\n\nvar _c;\n\n$RefreshReg$(_c, \"OwnGrids\");","map":{"version":3,"sources":["/Users/rphl/Projects/XWordsApp/crosswords/frontend/src/components/ownGrids.js"],"names":["React","useEffect","useState","useGlobalState","useParams","useReactToPrint","pkg","require","OwnGrids","globalState","list","setList","username","api_token","user","loadGrids","r","fetch","process","env","REACT_APP_API_URL","method","credentials","headers","json","e","window","location","solutions","length","componentRef","margin","title","map","val","j","textAlign","romanize","line","i","width","height","border","backgroundColor","def","l","display","print"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport useGlobalState from '../utils/useGlobalState'\nimport { useParams } from \"react-router-dom\";\nimport { useReactToPrint } from 'react-to-print';\nconst pkg = require('../../package.json')\n\n\nfunction OwnGrids() {\n    const globalState = useGlobalState()\n    const [list, setList] = useState('')\n    const { username, api_token } = globalState.user\n\n    const loadGrids = async () => {\n        try {\n            const r = await fetch(process.env.REACT_APP_API_URL+'/username/'+username,{\n                method: 'GET',\n                credentials: 'omit',\n                headers: {\n                    'Authorization': 'Token ' + api_token,\n                    'Content-Type': 'application/json'\n                }\n            })\n            const list = await r.json()\n            setList(list)\n        } catch(e) {\n            window.location = '/'\n        }\n    }\n\n    useEffect(()=>{\n        (async () => (await loadGrids()))()     \n    }, [])\n\n    return (\n        <div className=\"container main-container\">\n            { solutions.length && (<div ref={componentRef} style={{margin:'15px'}}><h1>{title}</h1><table>\n                <tr><td> </td>{solutions[0].map((val, j)=>(<td style={{textAlign: 'center'}}>{romanize(j+1)}.</td>))}</tr>\n                { solutions.map((line, i)=>(\n                    <tr><td>{i+1}.</td>{line.map((val, j)=>(<td style={{width: '2em', height: '2em', border: '1px solid #000', backgroundColor: (val === ' ' ? 'black' : 'white')}}><span style={{textAlign: 'center'}}>{solutions[i][j] ? val : ''}</span></td>))}</tr>\n                ))\n                }\n                </table>\n                <p>Cliquer sur une case et taper la lettre désiré, Retour arrière pour re-initialiser la case.</p>\n                <h3>Définitions</h3>\n                <h4>Horizontalement</h4>\n                <div>\n                {def[0].map((l, i) => (\n                    <div style={{margin: '5px'}}><span style={{width: '3em', display: 'inline-block'}}>{i+1}. </span><span>{l}</span></div>\n                ))}\n                </div>\n                <h4>Verticalement</h4>\n                <div>\n                {def[1].map((l, i) => (\n                    <div style={{margin: '5px'}}><span style={{width: '3em', display: 'inline-block'}}>{romanize(i+1)}. </span><span>{l}</span></div>\n                ))}\n                </div>\n                </div>)\n            }\n            <button class=\"btn btn-primary\" onClick={print}>Imprimer</button>\n        </div>\n    )\n}\n\nexport default OwnGrids"]},"metadata":{},"sourceType":"module"}